{"version":3,"sources":["components/lock-icon.png","components/Home.js","components/Navigation.js","components/password.js","components/story.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","class","id","Button","className","onClick","this","onclick","Component","Navigation","src","lock","style","height","activeStyle","color","exact","to","Password","state","guessed_password","Story","App","enteredRoom","setState","entered","acceptChallenge","temp_stages","stages","slice","myInterval","setInterval","seconds","minutes","clearInterval","path","component","variant","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cdaa6f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lock-icon.91fb9c5b.png\";","import React, {Component} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport \"./home.css\";\r\n\r\nclass Home extends Component { \r\n    constructor(props) { \r\n        super(props)\r\n        \r\n    }\r\n    render () { \r\n        return ( \r\n            <div class = \"row\"> \r\n                <div class = \"letter\" id = \"introletter\"> \r\n                    <h3> Welcome to the Web Escape Room! </h3>\r\n                    <p> The Web Escape Room works in the same fashion that a regular \r\n                        escape room works. Find the clues, piece them together, and <b>beat the \r\n                        puzzle </b> in the web browser!\r\n                    </p>\r\n                    <p> You can check how much time you have left \r\n                        in the top right corner and use the right sidebar to navigate. We recommend\r\n                        that you play with other people using screen sharing in order to help you \r\n                        complete the challenge and simulate what a real game would be like! \r\n                    </p>\r\n                    <div class = \"buttonhold\">  \r\n                    <Button className = \"accept\" onClick = {this.props.onclick}> Accept the Case? </Button> \r\n                    </div> \r\n                    <div class = \"closing\">\r\n                        <p> Best of Luck, </p> \r\n                        <p> A.G, A.Z </p>     \r\n                       \r\n                    </div>  \r\n                </div> \r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport \"./navigation.css\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport lock from \"./lock-icon.png\";\r\nconst Navigation = () => {\r\n    return (\r\n        <div className = \"navigation\"> \r\n            <ul> \r\n                <li>\r\n                    <img src = {lock} className = \"whiteback\" style = {{height: \"20px\"}} />\r\n                    <NavLink activeStyle = {{color: 'white'}} className = \"links\" exact to=\"/\"> HOME </NavLink>\r\n                </li>\r\n                <li>\r\n                    <img src = {lock} className = \"whiteback\" style = {{height: \"20px\"}} />\r\n                    <NavLink activeStyle = {{color: 'white'}} className = \"links\" exact to=\"/story\"> STORY </NavLink>\r\n                </li>\r\n                <li> \r\n                    <img src = {lock} className = \"whiteback\" style = {{height: \"20px\"}} />\r\n                    <NavLink activeStyle = {{color: 'white'}} className = \"links\" to=\"/password\"> PASSWORD </NavLink>\r\n                </li> \r\n                <li> \r\n                    <img src = {lock} className = \"whiteback\" style = {{height: \"20px\"}} />\r\n                    <NavLink activeStyle = {{color: 'white'}} className = \"links\" to=\"/contact\"> STARTING POINT </NavLink>\r\n                </li>\r\n                <li> \r\n                    <img src = {lock} className = \"whiteback\" style = {{height: \"20px\"}} />\r\n                    <NavLink activeStyle = {{color: 'white'}} className = \"links\" to=\"/contact\"> STARTING POINT 2 </NavLink>\r\n                </li>\r\n\r\n            </ul>\r\n       </div> \r\n    );\r\n}   \r\n\r\n \r\nexport default Navigation;","import React, {Component} from 'react';\r\n\r\n\r\nclass Password extends Component { \r\n    constructor(props) { \r\n        super(props) \r\n        this.state = { \r\n            guessed_password: \" \"\r\n        }\r\n    }\r\n\r\n    render () { \r\n        return ( \r\n            <div class = \"letter\"> \r\n                <h3> Who know who done it!  </h3> \r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Password;\r\n","import React, {Component} from 'react';\r\nimport \"./story.css\"\r\n\r\nclass Story extends Component { \r\n    constructor(props) { \r\n        super(props) \r\n        this.state = { \r\n            guessed_password: \" \"\r\n        }\r\n    }\r\n\r\n    render () { \r\n        return ( \r\n            <div class = \"letter\" id = \"storyletter\"> \r\n                <h3>  THE CASE? </h3> \r\n\r\n                <p> We got a call, late last night, that a prominent researcher for an emerging forerunner \r\n                    of a COVID-19 vaccine was found at this desk dead. Normally, Scotland Yard wouldn't have been\r\n                    brought into such a case unless it was important, and the government is anxious to solve this \r\n                    case quickly and quietly. He was found by his wife, who recently tested positive for the virus, \r\n                    and has been remaining isolated in her bedroom for the past 8 days. She came to check in for dinner\r\n                    and found her husband at his desk. \r\n                    </p> \r\n\r\n                <p> Because of the virus and the government mandated social distancing, our policeman \r\n                    can't go to investigate the crime in person; our entire deduction has to be conducted \r\n                    remotely. We were able to grab information off of his computer, his social media, some details \r\n                    about his company, and some other miscellaenous stuff. We're hoping that you can help us piece it \r\n                    all together. You only have an hour to do this before the company has to give a press conference, \r\n                    and we need it wrapped up by then. You can find a return letter on the next page.  </p> \r\n                <div class = \"closing\"> \r\n                    <p> Sincerely, </p> \r\n                    <p> Scotland Yard</p>\r\n                </div>\r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Story;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Home from './components/Home';\r\nimport Navigation from './components/Navigation';\r\nimport Password from \"./components/password\";\r\nimport Story from \"./components/story\"\r\nclass App extends Component {\r\n    constructor(props) { \r\n        super(props) \r\n        this.state = { \r\n            entered: false, \r\n            minutes: 15, \r\n            seconds: 0, \r\n            stages: [false, false, false, false]\r\n        }\r\n    }\r\n    enteredRoom = () => { \r\n        this.setState({ \r\n            entered: true\r\n        })\r\n    }\r\n    acceptChallenge = () => {\r\n        var temp_stages = this.state.stages.slice(); \r\n        temp_stages[0] = true;\r\n        this.setState({\r\n            stages: temp_stages\r\n        })\r\n        if (!this.state.stages[0]) { \r\n            this.myInterval = setInterval(() => {\r\n                const { seconds, minutes } = this.state\r\n\r\n                if (seconds > 0) {\r\n                    this.setState(({ seconds }) => ({\r\n                        seconds: seconds - 1\r\n                    }))\r\n                }\r\n                if (seconds === 0) {\r\n                    if (minutes === 0) {\r\n                        clearInterval(this.myInterval)\r\n                    } else {\r\n                        this.setState(({ minutes }) => ({\r\n                            minutes: minutes - 1,\r\n                            seconds: 59\r\n                        }))\r\n                    }\r\n                } \r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n    render() {\r\n        if (!this.state.entered) { \r\n            return ( \r\n                <Button className = \"enterB\" variant = \"primary\" onClick = {this.enteredRoom} > Dare to Enter..?</Button>\r\n            )\r\n        } else {\r\n            return (\r\n                <div class = \"container\">\r\n                    <div class = \"row topmargin\"> \r\n                        <BrowserRouter>\r\n                        <div class = \"col-md-9\"> \r\n                            <Switch>\r\n                                <Route path=\"/\" exact> <Home onclick = {this.acceptChallenge} /> </Route>\r\n                                <Route path = \"/password\" component = {Password} /> \r\n                                <Route path = \"/story\" component = {Story} />\r\n                            </Switch>\r\n                        </div> \r\n                        <div class = \"col-md-3\">\r\n                            <div class = \"timer\"> \r\n                                <h1> {this.state.minutes} : {this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds} </h1> \r\n                            </div>\r\n                            <Navigation />\r\n                        </div>\r\n                        </BrowserRouter>\r\n                    </div> \r\n                 \r\n                </div>\r\n              );\r\n        }\r\n    }\r\n}\r\n \r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}